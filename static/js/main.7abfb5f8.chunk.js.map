{"version":3,"sources":["App.js","reducers/columns.js","reducers/index.js","helpers/reorderCards.js","store.js","index.js","actions/cards.js","components/Column/index.jsx","containers/Card.js","assets/add.svg","containers/Columns.js","actions/columns.js","containers/AddForm.js","containers/index.js","components/Card/index.jsx","components/Button/index.jsx","components/AddForm/index.jsx","components/index.js","assets/clear.svg"],"names":["App","react_default","a","createElement","className","containers","initialState","title","cards","combineReducers","columns","state","arguments","length","undefined","action","type","map","item","index","payload","columnIndex","Object","objectSpread2","concat","toConsumableArray","text","filter","_","filterIndex","cardIndex","_action$payload","_ref","source","destination","sourceCardIndex","sourceId","droppableId","destinationCardIndex","destinationId","sourceColumnIndex","parseInt","replace","destinationColumnIndex","currentColumnIndex","_state$sourceColumnIn","splice","sourceCard","slicedToArray","destinationCards","Array","from","reorderCards","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","bridge","subscribe","e","console","log","Component","ReactDOM","render","es","document","getElementById","__webpack_exports__","addCard","removeCard","global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_1__","containers__WEBPACK_IMPORTED_MODULE_2__","assets_clear_svg__WEBPACK_IMPORTED_MODULE_3__","assets_clear_svg__WEBPACK_IMPORTED_MODULE_3___default","Column","onAddColumn","onAddCard","onRemove","onReorder","provided","assign","droppableProps","ref","innerRef","onClick","confirm","src","clearSvg","alt","card","key","placeholder","isEmptyColumn","components__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","actions_cards__WEBPACK_IMPORTED_MODULE_2__","connect","items","dispatch","cardsActions","Card","module","exports","p","_ref2","addColumn","name","removeColumn","react","react_beautiful_dnd_esm","onDragEnd","result","components","AddForm","children","_useState","useState","_useState2","showForm","setShowForm","_useState3","_useState4","value","setValue","textareaRef","useRef","useEffect","current","focus","onAdd","d","containers_Columns","containers_AddForm","draggableId","snapshot","draggableProps","dragHandleProps","bind","Button","components_Card","onChange","target","rows","components_Button","addSvg","components_AddForm"],"mappings":"4JAWeA,MARf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,sCCJAC,EAAe,CACnB,CACEC,MAAO,uEACPC,MAAO,IAIT,CACED,MAAO,6EACPC,MAAO,KCPIC,cAAgB,CAC7BC,QDYa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAAK,YACH,OAAOL,EAAMM,IAAI,SAACC,EAAMC,GACtB,OAAIJ,EAAOK,QAAQC,cAAgBF,EAC1BG,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFJ,GADL,IAEEV,MAAK,GAAAgB,OAAAF,OAAAG,EAAA,EAAAH,CAAMJ,EAAKV,OAAX,CAAkBO,EAAOK,QAAQM,SAGnCR,IAEX,IAAK,eACH,OAAOP,EAAMM,IAAI,SAACC,EAAMG,GACtB,OAAIN,EAAOK,QAAQC,cAAgBA,EAC1BC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFJ,GADL,IAEEV,MAAOU,EAAKV,MAAMmB,OAChB,SAACC,EAAGC,GAAJ,OAAoBA,IAAgBd,EAAOK,QAAQU,cAIlDZ,IAEX,IAAK,cACH,SAAAM,OAAAF,OAAAG,EAAA,EAAAH,CACKX,GADL,CAEE,CACEJ,MAAOQ,EAAOK,QACdZ,MAAO,MAGb,IAAK,gBACH,IAAAuB,EAAgChB,EAAOK,QACvC,OEnDS,SAAAY,GAAoC,IAAjCrB,EAAiCqB,EAAjCrB,MAAOsB,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,YAChBC,EAA2CF,EAAlDd,MAAqCiB,EAAaH,EAA1BI,YAEvBC,EAELJ,EAFFf,MACaoB,EACXL,EADFG,YAEIG,EAAoBC,SAASL,EAASM,QAAQ,UAAW,KACzDC,EAAyBF,SAASF,EAAcG,QAAQ,UAAW,KAEzE,OAAO/B,EAAMM,IAAI,SAACC,EAAM0B,GACtB,GAAID,IAA2BC,EAAoB,CACjD,IAAAC,EAAqBlC,EAAM6B,GAAmBhC,MAAMsC,OAClDX,EACA,GAFKY,EAAPzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,MAIMI,EAAmBC,MAAMC,KAAKxC,EAAMgC,GAAwBnC,OAClEyC,EAAiBH,OAAOR,EAAsB,EAAGS,GACjD7B,EAAKV,MAAQyC,EAGf,OAAO/B,IF+BEkC,CAAa,CAClBzC,QACAsB,OAHFF,EAAQE,OAINC,YAJFH,EAAgBG,cAOlB,IAAK,iBACH,OAAOvB,EAAMgB,OAAO,SAACC,EAAGT,GAAJ,OAAcJ,EAAOK,UAAYD,IACvD,QACE,OAAOR,MGnDE0C,EALDC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,+CCMhDC,EAAOC,UAAU,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,KAKlC,IAAeG,IAQR/D,EAPLgE,IAASC,OACPhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUb,MAAOA,GACfpD,EAAAC,EAAAC,cAAC4D,EAAD,OAEFI,SAASC,eAAe,0CCtBbC,EAAA,GACbC,QAAS,SAACjD,EAAaK,GAAd,MAAwB,CAC/BV,KAAM,YACNI,QAAS,CACPC,cACAK,UAGJ6C,WAAY,SAAClD,EAAaS,GAAd,MAA6B,CACvCd,KAAM,eACNI,QAAS,CACPC,cACAS,eAGJsB,aAAc,SAAApB,GAAA,MAA8B,CAC1ChB,KAAM,gBACNI,QAAS,CACPa,OAHUD,EAAGC,OAIbC,YAJUF,EAAWE,kDCf3B,SAAAsC,GAAA,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAA,IA+EeO,IArEA,SAAAjD,GAQT,IAPJX,EAOIW,EAPJX,YACAd,EAMIyB,EANJzB,MACAC,EAKIwB,EALJxB,MACA0E,EAIIlD,EAJJkD,YACAC,EAGInD,EAHJmD,UACAC,EAEIpD,EAFJoD,SAEIpD,EADJqD,UAQA,OAAO7E,EACLmE,EAAAzE,EAAAC,cAAC0E,EAAA,EAAD,CAAW7D,KAAK,QAAQqB,YAAW,UAAAb,OAAYH,IAC5C,SAAAiE,GAAQ,OACPX,EAAAzE,EAAAC,cAAA,MAAAmB,OAAAiE,OAAA,CACEnF,UAAU,UACNkF,EAASE,eAFf,CAGEC,IAAKH,EAASI,WAEdf,EAAAzE,EAAAC,cAAA,OAAKC,UAAU,iBACZG,GACCoE,EAAAzE,EAAAC,cAAA,OAAKC,UAAU,iBACbuE,EAAAzE,EAAAC,cAAA,SAAII,GACJoE,EAAAzE,EAAAC,cAAA,OAAKwF,SAnBf3D,EADJqD,UAEqB,WACfb,EAAOoB,QAAQ,4NACjBR,EAAS/D,KAgB6BjB,UAAU,cACpCuE,EAAAzE,EAAAC,cAAA,OAAK0F,IAAKC,IAAUC,IAAI,qBAI9BpB,EAAAzE,EAAAC,cAAA,OAAKC,UAAU,iBACZI,EAAMS,IAAI,SAAC+E,EAAM7E,GAAP,OACTwD,EAAAzE,EAAAC,cAAC2E,EAAA,EAAD,CAAMmB,IAAK9E,EAAOE,YAAaA,EAAaS,UAAWX,GACpD6E,KAGJV,EAASY,aAEZvB,EAAAzE,EAAAC,cAAC2E,EAAA,EAAD,CACEqB,eAAe,EACf9E,YAAaA,EACb6D,YAAaA,EACbC,UAAWA,QAOrBR,EAAAzE,EAAAC,cAAA,OAAKC,UAAW,wBACduE,EAAAzE,EAAAC,cAAA,OAAKC,UAAU,iBACbuE,EAAAzE,EAAAC,cAAC2E,EAAA,EAAD,CACEqB,eAAe,EACf9E,YAAaA,EACb6D,YAAaA,EACbC,UAAWA,4DCnErB,SAAAX,GAAA,IAAA4B,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA,IAIe6B,gBACb,SAAAvE,GAAA,MAAkB,CAAEwE,MAApBxE,EAAGtB,UACH,SAAA+F,GAAQ,MAAK,CACXrB,SAAU,SAAC/D,EAAaS,GAClB0C,EAAOoB,QAAQ,iLACjBa,EAASC,IAAanC,WAAWlD,EAAaS,OALvCyE,CASbI,4CCbFC,EAAAC,QAAiBnC,EAAAoC,EAAuB,wMCmDzBP,cACb,SAAAQ,GAAA,MAAkB,CAAEP,MAApBO,EAAGrG,UADiBY,OAAAC,EAAA,EAAAD,CAACA,OAAAC,EAAA,EAAAD,CAAA,GCnDR,CACb0F,UAAW,SAAAC,GAAI,MAAK,CAClBjG,KAAM,cACNI,QAAS6F,IAEXC,aAAc,SAAA/F,GAAK,MAAK,CACtBH,KAAM,iBACNI,QAASD,MD8CauF,KAFXH,CA3CC,SAAAvE,GAOVA,EANJb,MAMI,IALJqF,EAKIxE,EALJwE,MACAQ,EAIIhF,EAJJgF,UACA1C,EAGItC,EAHJsC,QACA4C,EAEIlF,EAFJkF,aACA9D,EACIpB,EADJoB,aAiBA,OACEnD,EAAAC,EAAAC,cAACgH,EAAA,SAAD,KACElH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAiBC,UAjBH,SAAAC,GAChB,IAAQrF,EAAwBqF,EAAxBrF,OAAQC,EAAgBoF,EAAhBpF,aAEbA,GACAD,EAAOI,cAAgBH,EAAYG,aAClCJ,EAAOd,QAAUe,EAAYf,OAIjCiC,EAAa,CACXnB,SACAC,kBAOGsE,EAAMvF,IAAI,SAACC,EAAMC,GAAP,OACTlB,EAAAC,EAAAC,cAACoH,EAAA,EAADjG,OAAAiE,OAAA,GACMrE,EADN,CAEE+E,IAAK9E,EACLE,YAAaF,EACb+D,YAAa8B,EACb7B,UAAWb,EACXc,SAAU8B,EACV7B,UAAWjC,QAIjBnD,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAQrC,YAAa8B,EAAW7B,UAAWb,uBEJlCkD,EAvCC,SAAAxF,GAMV,IALJX,EAKIW,EALJX,YAEA8D,GAGInD,EAJJyF,SAIIzF,EAHJmD,WACAD,EAEIlD,EAFJkD,YACAiB,EACInE,EADJmE,cAEAuB,EAAgCC,oBAAS,GAAzCC,EAAAtG,OAAA0B,EAAA,EAAA1B,CAAAoG,EAAA,GAAOG,EAAPD,EAAA,GAAiBE,EAAjBF,EAAA,GACAG,EAA0BJ,mBAAS,IAAnCK,EAAA1G,OAAA0B,EAAA,EAAA1B,CAAAyG,EAAA,GAAOE,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GACMG,EAAcC,iBAAO,MAE3BC,oBAAU,WACJF,EAAYG,SACdH,EAAYG,QAAQC,SAErB,CAACV,IAYJ,OACE5H,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACEiB,MAZU,WACRrC,EACFjB,EAAY+C,GAEZ9C,EAAU9D,EAAa4G,GAEzBC,EAAS,IACTJ,GAAY,IAMVD,SAAUA,EACVC,YAAaA,EACbG,MAAOA,EACPC,SAAUA,EACVC,YAAaA,KCrCnBzD,EAAA+D,EAAApE,EAAA,sBAAAqE,IAAAhE,EAAA+D,EAAApE,EAAA,sBAAAsC,EAAA,IAAAjC,EAAA+D,EAAApE,EAAA,sBAAAsE,gFCsCehC,SA/BF,SAAA3E,GAAA,IAAGF,EAAHE,EAAGF,UAAWT,EAAdW,EAAcX,YAAaoG,EAA3BzF,EAA2ByF,SAAUrC,EAArCpD,EAAqCoD,SAArC,MACU,qBAAdtD,EACL7B,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CACEwB,YAAW,QAAApH,OAAUH,EAAV,KAAAG,OAAyBM,GACpCX,MAAOW,GAEN,SAACwD,EAAUuD,GAAX,OACC5I,EAAAC,EAAAC,cAAA,MAAAmB,OAAAiE,OAAA,CACEnF,UAAU,OACVqF,IAAKH,EAASI,UACVJ,EAASwD,eACTxD,EAASyD,iBAEb9I,EAAAC,EAAAC,cAAA,YAAOsH,GACPxH,EAAAC,EAAAC,cAAA,OACEwF,QAASP,EAAS4D,YAAW3H,EAAaS,GAC1C1B,UAAU,cAEVH,EAAAC,EAAAC,cAAA,OAAK0F,IAAKC,IAAUC,IAAI,uBAMhC9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQqH,aCbZwB,SAbA,SAAAjH,GAA2B,IAAxByF,EAAwBzF,EAAxByF,SAAU9B,EAAc3D,EAAd2D,QAC1B,OACE1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASuF,QAASA,GACjC8B,sBCwDQD,SAzDC,SAAAxF,GAUV,IATJiG,EASIjG,EATJiG,MACAJ,EAQI7F,EARJ6F,SACAK,EAOIlG,EAPJkG,SAEAC,GAKInG,EANJX,YAMIW,EALJmG,aACAL,EAII9F,EAJJ8F,YAEAU,GAEIxG,EAHJyF,SAGIzF,EAFJwG,OACArC,EACInE,EADJmE,cAEA,OAAO0B,EACL5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC+I,EAAD,KACEjJ,EAAAC,EAAAC,cAAA,YACEgJ,SAAU,SAAAvF,GAAC,OAAIsE,EAAStE,EAAEwF,OAAOnB,QACjCA,MAAOA,EACP/B,YACEC,EACI,yIACA,+IAENV,IAAK0C,EACLkB,KAAK,OAGTpJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACmJ,EAAD,CAAQ3D,QAAS6C,GACdrC,EAAgB,8FAAqB,qGAExClG,EAAAC,EAAAC,cAAA,OACEwF,QAASmC,EAAYkB,aAAW,GAChC5I,UAAU,yBACVyF,IAAKC,IACLC,IAAI,sBAMZ9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OACEwF,QAASmC,EAAYkB,aAAW,GAChC5I,UAAU,4BAEVH,EAAAC,EAAAC,cAAA,OAAK0F,IAAK0D,IAAQxD,IAAI,iBACtB9F,EAAAC,EAAAC,cAAA,YACGgG,EACG,0IACA,qJCzDdzB,EAAA+D,EAAApE,EAAA,sBAAA6E,IAAAxE,EAAA+D,EAAApE,EAAA,sBAAAY,EAAA,IAAAP,EAAA+D,EAAApE,EAAA,sBAAAiF,IAAA5E,EAAA+D,EAAApE,EAAA,sBAAAmF,uBCAA5C,EAAAC,QAAiBnC,EAAAoC,EAAuB","file":"static/js/main.7abfb5f8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Columns } from \"containers\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Columns />\n    </div>\n  );\n}\n\nexport default App;\n","import reorderCards from \"helpers/reorderCards\";\n\nconst initialState = [\n  {\n    title: \"План на месяц\",\n    cards: [\n      \n    ]\n  },\n  {\n    title: \"План на неделю\",\n    cards: [\n      \n    ]\n  }\n];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"CARDS:ADD\":\n      return state.map((item, index) => {\n        if (action.payload.columnIndex === index) {\n          return {\n            ...item,\n            cards: [...item.cards, action.payload.text]\n          };\n        }\n        return item;\n      });\n    case \"CARDS:REMOVE\":\n      return state.map((item, columnIndex) => {\n        if (action.payload.columnIndex === columnIndex) {\n          return {\n            ...item,\n            cards: item.cards.filter(\n              (_, filterIndex) => filterIndex !== action.payload.cardIndex\n            )\n          };\n        }\n        return item;\n      });\n    case \"COLUMNS:ADD\":\n      return [\n        ...state,\n        {\n          title: action.payload,\n          cards: []\n        }\n      ];\n    case \"CARDS:REORDER\": {\n      const { source, destination } = action.payload;\n      return reorderCards({\n        state,\n        source,\n        destination\n      });\n    }\n    case \"COLUMNS:REMOVE\":\n      return state.filter((_, index) => action.payload !== index);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport columns from \"./columns\";\n\nexport default combineReducers({\n  columns\n});\n","export default ({ state, source, destination }) => {\n  const { index: sourceCardIndex, droppableId: sourceId } = source;\n  const {\n    index: destinationCardIndex,\n    droppableId: destinationId\n  } = destination;\n  const sourceColumnIndex = parseInt(sourceId.replace(\"column-\", \"\"));\n  const destinationColumnIndex = parseInt(destinationId.replace(\"column-\", \"\"));\n\n  return state.map((item, currentColumnIndex) => {\n    if (destinationColumnIndex === currentColumnIndex) {\n      const [sourceCard] = state[sourceColumnIndex].cards.splice(\n        sourceCardIndex,\n        1\n      );\n      const destinationCards = Array.from(state[destinationColumnIndex].cards);\n      destinationCards.splice(destinationCardIndex, 0, sourceCard);\n      item.cards = destinationCards;\n    }\n\n    return item;\n  });\n};\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\n\nimport bridge from '@vkontakte/vk-bridge';\n\nbridge.subscribe(e => console.log(e));\n\n\n\n\nconst render = Component =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <Component />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nrender(App);\n\nif (module.hot) {\n  module.hot.accept(\"./App\", () => {\n    const NextApp = require(\"./App\").default;\n    render(NextApp);\n  });\n}\n","export default {\n  addCard: (columnIndex, text) => ({\n    type: \"CARDS:ADD\",\n    payload: {\n      columnIndex,\n      text\n    }\n  }),\n  removeCard: (columnIndex, cardIndex) => ({\n    type: \"CARDS:REMOVE\",\n    payload: {\n      columnIndex,\n      cardIndex\n    }\n  }),\n  reorderCards: ({ source, destination }) => ({\n    type: \"CARDS:REORDER\",\n    payload: {\n      source,\n      destination\n    }\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nimport { AddForm } from \"containers\";\nimport { Card } from \"containers\";\nimport clearSvg from \"assets/clear.svg\";\n\nimport \"./Column.scss\";\n\nconst Column = ({\n  columnIndex,\n  title,\n  cards,\n  onAddColumn,\n  onAddCard,\n  onRemove,\n  onReorder\n}) => {\n  const removeColumn = () => {\n    if (global.confirm(\"Вы действительно хотите удалить колонку?\")) {\n      onRemove(columnIndex);\n    }\n  };\n\n  return cards ? (\n    <Droppable type=\"CARDS\" droppableId={`column-${columnIndex}`}>\n      {provided => (\n        <div\n          className=\"column\"\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          <div className=\"column__inner\">\n            {title && (\n              <div className=\"column__title\">\n                <b>{title}</b>\n                <div onClick={removeColumn} className=\"remove-btn\">\n                  <img src={clearSvg} alt=\"Clear svg icon\" />\n                </div>\n              </div>\n            )}\n            <div className=\"column__items\">\n              {cards.map((card, index) => (\n                <Card key={index} columnIndex={columnIndex} cardIndex={index}>\n                  {card}\n                </Card>\n              ))}\n              {provided.placeholder}\n            </div>\n            <AddForm\n              isEmptyColumn={false}\n              columnIndex={columnIndex}\n              onAddColumn={onAddColumn}\n              onAddCard={onAddCard}\n            />\n          </div>\n        </div>\n      )}\n    </Droppable>\n  ) : (\n    <div className={\"column column--empty\"}>\n      <div className=\"column__inner\">\n        <AddForm\n          isEmptyColumn={true}\n          columnIndex={columnIndex}\n          onAddColumn={onAddColumn}\n          onAddCard={onAddCard}\n        />\n      </div>\n    </div>\n  );\n};\n\nColumn.propTypes = {\n  cards: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Column;\n","import { Card } from \"components\";\nimport { connect } from \"react-redux\";\nimport cardsActions from \"actions/cards\";\n\nexport default connect(\n  ({ columns }) => ({ items: columns }),\n  dispatch => ({\n    onRemove: (columnIndex, cardIndex) => {\n      if (global.confirm(\"Вы действительно хотите удалить?\")) {\n        dispatch(cardsActions.removeCard(columnIndex, cardIndex));\n      }\n    }\n  })\n)(Card);\n","module.exports = __webpack_public_path__ + \"static/media/add.6cb6e5fc.svg\";","import React, { Fragment } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport { Column } from \"components\";\nimport { connect } from \"react-redux\";\nimport columnsActions from \"actions/columns\";\nimport cardsActions from \"actions/cards\";\n\nconst Columns = ({\n  index,\n  items,\n  addColumn,\n  addCard,\n  removeColumn,\n  reorderCards\n}) => {\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    if (\n      !destination ||\n      (source.droppableId === destination.droppableId &&\n        source.index === destination.index)\n    ) {\n      return;\n    }\n    reorderCards({\n      source,\n      destination\n    });\n  };\n\n  return (\n    <Fragment>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {items.map((item, index) => (\n          <Column\n            {...item}\n            key={index}\n            columnIndex={index}\n            onAddColumn={addColumn}\n            onAddCard={addCard}\n            onRemove={removeColumn}\n            onReorder={reorderCards}\n          />\n        ))}\n      </DragDropContext>\n      <Column onAddColumn={addColumn} onAddCard={addCard} />\n    </Fragment>\n  );\n};\n\nexport default connect(\n  ({ columns }) => ({ items: columns }),\n  { ...columnsActions, ...cardsActions }\n)(Columns);\n","export default {\n  addColumn: name => ({\n    type: \"COLUMNS:ADD\",\n    payload: name\n  }),\n  removeColumn: index => ({\n    type: \"COLUMNS:REMOVE\",\n    payload: index\n  })\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { AddForm as AddFormBase } from \"components\";\n\nconst AddForm = ({\n  columnIndex,\n  children,\n  onAddCard,\n  onAddColumn,\n  isEmptyColumn\n}) => {\n  const [showForm, setShowForm] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  }, [showForm]);\n\n  const onAdd = () => {\n    if (isEmptyColumn) {\n      onAddColumn(value);\n    } else {\n      onAddCard(columnIndex, value);\n    }\n    setValue(\"\");\n    setShowForm(false);\n  };\n\n  return (\n    <AddFormBase\n      onAdd={onAdd}\n      showForm={showForm}\n      setShowForm={setShowForm}\n      value={value}\n      setValue={setValue}\n      textareaRef={textareaRef}\n    />\n  );\n};\n\nexport default AddForm;\n","export { default as Columns } from \"./Columns\";\nexport { default as Card } from \"./Card\";\nexport { default as AddForm } from \"./AddForm\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport clearSvg from \"assets/clear.svg\";\n\nimport \"./Card.scss\";\n\nconst Card = ({ cardIndex, columnIndex, children, onRemove }) =>\n  typeof cardIndex !== \"undefined\" ? (\n    <Draggable\n      draggableId={`card-${columnIndex}-${cardIndex}`}\n      index={cardIndex}\n    >\n      {(provided, snapshot) => (\n        <div\n          className=\"card\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <span>{children}</span>\n          <div\n            onClick={onRemove.bind(this, columnIndex, cardIndex)}\n            className=\"remove-btn\"\n          >\n            <img src={clearSvg} alt=\"Clear svg icon\" />\n          </div>\n        </div>\n      )}\n    </Draggable>\n  ) : (\n    <div className=\"card\">{children}</div>\n  );\n\nCard.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Button.scss\";\n\nconst Button = ({ children, onClick }) => {\n  return (\n    <button className=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  onClick: PropTypes.func\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Button, Card } from \"components\";\nimport addSvg from \"assets/add.svg\";\nimport clearSvg from \"assets/clear.svg\";\n\nimport \"./AddForm.scss\";\n\nconst AddForm = ({\n  value,\n  showForm,\n  setValue,\n  columnIndex,\n  textareaRef,\n  setShowForm,\n  children,\n  onAdd,\n  isEmptyColumn\n}) => {\n  return showForm ? (\n    <div className=\"add-form\">\n      <div className=\"add-form__input\">\n        <Card>\n          <textarea\n            onChange={e => setValue(e.target.value)}\n            value={value}\n            placeholder={\n              isEmptyColumn\n                ? \"Введите название колонку\"\n                : \"Введите название карточку\"\n            }\n            ref={textareaRef}\n            rows=\"3\"\n          />\n        </Card>\n        <div className=\"add-form__bottom\">\n          <Button onClick={onAdd}>\n            {isEmptyColumn ? \"Добавить колонку\" : \"Добавить карточку\"}\n          </Button>\n          <img\n            onClick={setShowForm.bind(this, false)}\n            className=\"add-form__bottom-clear\"\n            src={clearSvg}\n            alt=\"Clear svg icon\"\n          />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"add-form__bottom\">\n      <div\n        onClick={setShowForm.bind(this, true)}\n        className=\"add-form__bottom-add-btn\"\n      >\n        <img src={addSvg} alt=\"Add svg icon\" />\n        <span>\n          {isEmptyColumn\n            ? \"Добавить еще одну колонку\"\n            : \"Добавить еще одну карточку\"}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default AddForm;\n","export { default as Card } from \"./Card\";\nexport { default as Column } from \"./Column\";\nexport { default as Button } from \"./Button\";\nexport { default as AddForm } from \"./AddForm\";\n","module.exports = __webpack_public_path__ + \"static/media/clear.5fe0db66.svg\";"],"sourceRoot":""}